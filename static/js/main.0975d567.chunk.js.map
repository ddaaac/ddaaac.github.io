{"version":3,"sources":["component/TodoHeader.js","component/TodoItem.js","component/TodoList.js","component/TodoFilter.js","component/TodoFooter.js","component/Filters.js","App.js","index.js"],"names":["TodoHeader","addItem","useState","contentInput","setContentInput","id","className","placeholder","value","onKeyPress","event","key","onChange","target","autoFocus","TodoItem","content","completed","editing","onComplete","onDelete","onEdit","onSave","isShow","editInput","setEditInput","classNames","push","join","itemClassNames","onDoubleClick","type","checked","onClick","onKeyDown","TodoList","todoItems","isShowItem","todoItemsTemplate","map","item","TodoFilter","name","isSelected","filterHandler","children","filterClassNames","href","TodoFooter","itemCounts","reloadFilter","isSelectedFilter","expression","FILTERS","condition","getFilter","evaluatedExpression","window","location","filter","includes","App","Date","now","setTodoItems","setFilter","newItem","concat","updateItems","copied","toggleCompleteItem","toggleEditItem","modifiedContent","modifyItemContent","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0975d567.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoHeader({ addItem }) {\n  const [contentInput, setContentInput] = useState('');\n\n  const contentInputHandler = (event) => {\n    setContentInput(event.target.value);\n  };\n\n  const addItemHandler = (event) => {\n    if (event.key === 'Enter') {\n      addItem(contentInput);\n      setContentInput('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>TODOS</h1>\n      <input\n        id=\"new-todo-title\"\n        className=\"new-todo\"\n        placeholder=\"할 일을 추가해주세요\"\n        value={contentInput}\n        onKeyPress={addItemHandler}\n        onChange={contentInputHandler}\n        /* eslint-disable-next-line jsx-a11y/no-autofocus */\n        autoFocus\n      />\n    </div>\n  );\n}\n\nexport default TodoHeader;\n","import React, { useState } from 'react';\n\nfunction TodoItem({\n  id, content, completed, editing, onComplete, onDelete, onEdit, onSave, isShow,\n}) {\n  const [editInput, setEditInput] = useState('');\n\n  const itemClassNames = () => {\n    const classNames = [];\n    if (completed === true) {\n      classNames.push('completed');\n    }\n    if (editing === true) {\n      classNames.push('editing');\n    }\n\n    return classNames.join(' ');\n  };\n\n  const toggleCompleteHandler = () => {\n    onComplete(id);\n  };\n\n  const toggleDeleteHandler = () => {\n    onDelete(id);\n  };\n\n  const toggleEditHandler = () => {\n    setEditInput(content);\n    onEdit(id);\n  };\n\n  const editInputChangeHandler = (event) => {\n    setEditInput(event.target.value);\n  };\n\n  const saveOrEscapeHandler = (event) => {\n    const { key } = event;\n    if (key === 'Escape') {\n      onEdit(id);\n    }\n    if (key === 'Enter') {\n      onSave(id, editInput);\n    }\n  };\n\n  return (\n    isShow(completed)\n    && (\n      <li className={itemClassNames()}>\n        <div className=\"view\" onDoubleClick={toggleEditHandler}>\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed ? 'checked' : ''}\n            onChange={toggleCompleteHandler}\n          />\n          <label className=\"label\">{content}</label>\n          <button className=\"destroy\" onClick={toggleDeleteHandler} />\n        </div>\n        <input className=\"edit\" value={editInput} onKeyDown={saveOrEscapeHandler} onChange={editInputChangeHandler} />\n      </li>\n    )\n  );\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({\n  todoItems, onComplete, onDelete, onEdit, onSave, isShowItem,\n}) {\n  const todoItemsTemplate = todoItems.map((item) => (\n    <TodoItem\n      key={item.id}\n      id={item.id}\n      content={item.content}\n      completed={item.completed}\n      editing={item.editing}\n      onComplete={onComplete}\n      onDelete={onDelete}\n      onEdit={onEdit}\n      onSave={onSave}\n      isShow={isShowItem}\n    />\n  ));\n\n  return (\n    <div className=\"main\">\n      <input className=\"toggle-all\" type=\"checkbox\" />\n      <ul id=\"todo-list\" className=\"todo-list\">\n        {todoItemsTemplate}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\n\nfunction TodoFilter({\n  name, isSelected, filterHandler, children,\n}) {\n  const filterClassNames = () => {\n    const classNames = [name];\n\n    if (isSelected(name)) {\n      classNames.push('selected');\n    }\n\n    return classNames.join(' ');\n  };\n\n  return (\n    <li>\n      <a className={filterClassNames()} href={`#/${name}`} onClick={filterHandler}>{children}</a>\n    </li>\n  );\n}\n\nexport default TodoFilter;\n","import React from 'react';\nimport TodoFilter from './TodoFilter';\n\nfunction TodoFooter({ itemCounts, reloadFilter, isSelectedFilter }) {\n  const filterHandler = (event) => {\n    const expression = event.target.href;\n    reloadFilter(expression);\n  };\n\n  return (\n    <div className=\"count-container\">\n      <span className=\"todo-count\">\n        총\n        {' '}\n        <strong>{itemCounts}</strong>\n        {' '}\n        개\n      </span>\n      <ul className=\"filters\">\n        <TodoFilter name=\"all\" isSelected={isSelectedFilter} filterHandler={filterHandler}>전체보기</TodoFilter>\n        <TodoFilter name=\"active\" isSelected={isSelectedFilter} filterHandler={filterHandler}>해야할 일</TodoFilter>\n        <TodoFilter name=\"completed\" isSelected={isSelectedFilter} filterHandler={filterHandler}>완료한 일</TodoFilter>\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoFooter;\n","const COMPLETED_FILTER = {\n  condition: 'completed',\n  isShow: (completed) => completed,\n  isSelected: (name) => name === 'completed',\n};\n\nconst ACTIVE_FILTER = {\n  condition: 'active',\n  isShow: (completed) => !completed,\n  isSelected: (name) => name === 'active',\n};\n\nconst ALL_FILTER = {\n  condition: '',\n  isShow: () => true,\n  isSelected: (name) => name === 'all',\n};\n\nconst FILTERS = [COMPLETED_FILTER, ACTIVE_FILTER, ALL_FILTER];\n\nconst getFilter = (expression) => {\n  const evaluatedExpression = expression || window.location.href;\n  const [selectedFilter] = FILTERS.filter(\n    (filter) => evaluatedExpression.includes(filter.condition),\n  );\n  return selectedFilter;\n};\n\nexport default getFilter;\n","import React, { useState } from 'react';\nimport './App.css';\nimport TodoHeader from './component/TodoHeader';\nimport TodoList from './component/TodoList';\nimport TodoFooter from './component/TodoFooter';\nimport getFilter from './component/Filters';\n\nfunction App() {\n  const [todoItems, setTodoItems] = useState([{\n    id: Date.now(),\n    content: '예시',\n    completed: false,\n    editing: false,\n  }]);\n  const [filter, setFilter] = useState(getFilter());\n\n  const addItem = (content) => {\n    const newItem = {\n      id: Date.now(), content, completed: false, editing: false,\n    };\n    setTodoItems(todoItems.concat(newItem));\n  };\n\n  const toggleCompleteItem = (item) => {\n    const copied = { ...item };\n    copied.completed = !copied.completed;\n    return copied;\n  };\n\n  const toggleComplete = (id) => {\n    const updateItems = todoItems.map(\n      (item) => ((item.id === id) ? toggleCompleteItem(item) : item),\n    );\n    setTodoItems(updateItems);\n  };\n\n  const deleteItem = (id) => {\n    const updateItems = todoItems.filter((item) => item.id !== id);\n    setTodoItems(updateItems);\n  };\n\n  const toggleEditItem = (item) => {\n    const copied = { ...item };\n    copied.editing = !copied.editing;\n    return copied;\n  };\n\n  const toggleEdit = (id) => {\n    const updateItems = todoItems.map((item) => ((item.id === id) ? toggleEditItem(item) : item));\n    setTodoItems(updateItems);\n  };\n\n  const modifyItemContent = (item, modifiedContent) => {\n    const copied = { ...item };\n    copied.content = modifiedContent;\n    copied.editing = false;\n    return copied;\n  };\n\n  const saveEdit = (id, modifiedContent) => {\n    const updateItems = todoItems.map(\n      (item) => ((item.id === id) ? modifyItemContent(item, modifiedContent) : item),\n    );\n    setTodoItems(updateItems);\n  };\n\n  const countTodoItems = () => todoItems.filter((item) => filter.isShow(item.completed)).length;\n\n  const isShowItem = (completed) => filter.isShow(completed);\n\n  const reloadFilter = (expression) => {\n    setFilter(getFilter(expression));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <TodoHeader addItem={addItem} />\n      <TodoList\n        todoItems={todoItems}\n        onComplete={toggleComplete}\n        onDelete={deleteItem}\n        onEdit={toggleEdit}\n        onSave={saveEdit}\n        isShowItem={isShowItem}\n      />\n      <TodoFooter\n        itemCounts={countTodoItems()}\n        reloadFilter={reloadFilter}\n        isSelectedFilter={filter.isSelected}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}